{"version":3,"sources":["components/Wrap.js","components/Form.js","components/ButtonGroup.js","components/Animate.js","components/Canvas.js","components/Table.js","components/Content.js","App.js","serviceWorker.js","index.js","components/Content.module.css","components/Form.module.css"],"names":["Wrap","props","children","Form","type","length","magnitude","direction","location","unit","units","throwError","error","disable","data","values","len","mag","className","classes","form","onSubmit","value","start","name","onChange","change","style","color","end","class","disabled","id","initialState","ButtonGroup","React","useState","instances","show","buttons","setShow","setData","reset","activateReset","setUnits","useEffect","console","log","beamCheck","handleChange","event","targetValue","target","targetName","parseInt","handleSubmit","formType","a","preventDefault","getData","Date","now","edit","isSupport","renderButtons","Object","keys","map","buttonName","index","key","onClick","open","from","opacity","marginTop","to","buttonGroup","fontSize","padding","background","solve","Animate","Canvas","addBeam","pass","setupBeam","system","lengthEnd","beam","lengthBegin","renderLength","allUnits","initialScreen","text","x","y","newSupport","unknowns","support","supportName","deltaX","answer","marker","reactionName","Math","abs","zeroY","radius","fill","points","stroke","pointerLength","pointerWidth","pointerAtBeginning","newForces","knowns","force","item","itemName","newMoments","moment","tension","newDistributed","distributed","magStart","startLabel","endLabel","renderStart","renderEnd","width","height","boxShadow","margin","marginLeft","marginRight","Table","changes","setChanges","allMagUnits","allLengths","suppUnit","items","renderItems","element","delete","marginBottom","Content","state","document","body","backgroundColor","split","toLowerCase","newArray","this","filter","setState","newArray2","newElement","found2","find","indexOfFound2","indexOf","splice","found","indexOfFound","deleteElement","newData","newKnown","Fi","array1","array2","distr","reducer","acc","curr","forceOnly","distrOnly","reduce","Ri","inverse","array3","distance","momentOnly","R1","A","b","sumFi","sumFiXi","A_I","math","toFixed","flexContainer","changeUnit","bind","getSolveSignal","resetData","output","info","message","setOpen","getChanges","Component","App","textAlign","paddingTop","zIndex","href","Boolean","window","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","module","exports"],"mappings":"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","file":"static/js/main.8cf143f4.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Wrap(props){\r\n    return(\r\n        props.children\r\n        )\r\n}\r\n\r\nexport default Wrap","import React from 'react';\r\nimport Wrap from './Wrap'\r\nimport classes from './Form.module.css'\r\n\r\nfunction Form(props) {\r\n    let type = props.type\r\n    let length = true\r\n    let magnitude = true\r\n    let direction = true\r\n    let location = true\r\n    let unit = props.units\r\n    let throwError = props.error\r\n    let disable = throwError !== ''\r\n\r\n    let data = props.values\r\n\r\n    if (type === 'Add Beam'){\r\n        disable = null\r\n    }\r\n\r\n    switch(type) {\r\n        case 'Add Force':\r\n            length = false\r\n            break\r\n        case 'Add Support':\r\n            direction = false\r\n            length = false\r\n            magnitude = false\r\n            break\r\n        case 'Add Beam':\r\n            location = false\r\n            magnitude = false\r\n            direction = false\r\n            break\r\n        case 'Add Moment':\r\n            length = false\r\n            break\r\n        case 'Add Distributed Load':\r\n            location = false\r\n            length = false\r\n            direction = false\r\n\r\n        default:\r\n            length = false\r\n    }\r\n\r\n    let len = 'm'\r\n    let mag = 'N'\r\n\r\n    switch(unit){\r\n        case 'U.S':\r\n            len = 'ft'\r\n            mag = 'Lb'\r\n            break\r\n        case 'S.I': \r\n            len = 'm'\r\n            mag = 'N'\r\n    }\r\n\r\n    if (type === 'Add Moment' && unit === 'U.S'){\r\n        mag = 'Lb-ft'\r\n    }\r\n    else if (type === 'Add Distributed Load' && unit === 'S.I') {\r\n       mag = 'N/m'\r\n    }\r\n    else if (type === 'Add Distributed Load' && unit === 'U.S'){\r\n        mag = 'Lb/ft'\r\n\r\n    }\r\n    else if (type === 'Add Moment' && unit === 'S.I'){\r\n        mag = 'N-m'\r\n    }\r\n\r\n\r\n    return(\r\n        <div className = {classes.form}>\r\n            <form onSubmit = {props.onSubmit(props.type)}>\r\n\r\n            {type === 'Add Distributed Load'?\r\n                    <Wrap>\r\n                        <label>Start ({len}):</label>\r\n                        <input value = {data.start} name = 'start' onChange = {props.change} type = 'number'></input>\r\n                        {throwError === 'Start or End is out of range'? <p style = {{color:'red'}}>{throwError}</p>: null}\r\n                        <br/>\r\n                        <label>End ({len}):</label>\r\n                        <input value = {data.end} name = 'end' onChange = {props.change} type = 'number'></input>\r\n                        {throwError === 'Start or End is out of range'? <p style = {{color:'red'}}>{throwError}</p>: null}\r\n                        <br/>\r\n                    </Wrap>\r\n                :null}\r\n\r\n\r\n                {location? \r\n                <div>\r\n                    <label>Location ({len}):</label>\r\n                    <input value = {data.location} name = 'location' onChange = {props.change} type = 'number'></input>\r\n                     {throwError !== ''? <p style = {{color:'red'}}>{throwError}</p>: null} <br/>\r\n                </div>:null}\r\n\r\n                {magnitude? \r\n                <div>\r\n                    <label>Magnitude ({mag}):</label>\r\n                    <input value = {data.magnitude} name = 'magnitude' onChange = {props.change} type = 'number'></input>\r\n                    <br/>\r\n                </div>\r\n                :null }\r\n                {direction? \r\n                <div>\r\n                    <label>Direction:  </label>\r\n                    <select type = 'number' name = 'direction' onChange= {props.change} value = {data.direction}>\r\n                        <option value= '1'>{type === 'Add Moment'? 'Counter-Clockwise': 'Positive'}</option>\r\n                        <option value='-1'>{type === 'Add Moment'? 'Clockwise': 'Negative'}</option>\r\n                    </select>\r\n                    <br/>\r\n                </div>\r\n                :null}\r\n                \r\n                {length?\r\n                <div>\r\n                    <label>Length ({len})</label>\r\n                    <input value = {data.length} name = 'length' onChange = {props.change} type = 'number'></input>\r\n                    {throwError === \"Beam length has to be greater than 0\"? <p style = {{color:'red'}}>{throwError}</p>: null}\r\n                    <br/>\r\n                </div>\r\n                 : null  }\r\n    \r\n                <input class = {'submit'} disabled = {disable} id = {props.id} type = 'submit' name = 'Submit'></input>\r\n                    \r\n            </form>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form","import React , {useState, useEffect,useRef} from 'react';\r\nimport classes from './Content.module.css'\r\nimport Form from './Form'\r\nimport {Spring} from 'react-spring/renderprops'\r\n\r\nconst initialState = {\r\n    magnitude:0,\r\n    location:0,\r\n    direction:1,\r\n    length:0,\r\n    location:0,\r\n    errorMessage: ''\r\n}\r\n\r\nfunction ButtonGroup(props) {\r\n    //const useStyle ={\r\n    //    boxShadow: '3px 3px 4px 4px #adb5bd',\r\n    //    background:'#ffffff',\r\n    //    width: '200px',\r\n    //    margin: '50px',\r\n    //    paddingTop: '25px',\r\n    //    paddingBottom: '40px',\r\n    //    paddingLeft: '30px',\r\n    //    paddingRight: '30px'\r\n    //}\r\n\r\n    const [checked, setColl] = React.useState(false);\r\n\r\n    const [buttons,setShow] = useState(\r\n        {'Add Force': {instances:[],show:false}, \r\n        'Add Support': {instances:[],show:false}, \r\n        'Add Beam': {instances:[],show:false}, \r\n        'Add Moment': {instances:[],show:false},\r\n        'Add Distributed Load': {instances:[],show:false},}\r\n        )\r\n    \r\n    const [data,setData] = useState (initialState)\r\n    const [reset,activateReset] = useState (false)\r\n    const [units, setUnits] = useState('U.S')\r\n    const [error,throwError] = useState('')\r\n\r\n    //const prevUnit = useRef()\r\n\r\n    const open =(buttonName)=> {\r\n\r\n        setShow({...buttons,[buttonName]: {...buttons[buttonName],show:!buttons[buttonName].show}})\r\n    }\r\n\r\n    const resetData=()=>{\r\n        activateReset(!reset)\r\n        if (reset === true) {\r\n            props.reset()\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        //prevUnit.current = units\r\n        if (data.location > data.length || data.location < 0)\r\n        {\r\n            throwError('You can only enter location in range of 0 to ' + data.length)\r\n            console.log(error)\r\n        }\r\n        else if (data.length <= 0){\r\n            throwError(\"Beam length has to be greater than 0\")\r\n            console.log(error)\r\n        }\r\n        else if (data.length > 0  && props.beamCheck === 0){\r\n            throwError(\"Beam length can't be 0\")\r\n            console.log(props.beamCheck,data.length)\r\n        }\r\n        else if (data.end > data.length || data.start < 0 || data.end <= data.start || data.start >= data.length){\r\n            throwError('Start or End is out of range')\r\n            console.log(error)\r\n        }\r\n        //else if (units !== prev){\r\n        //    props.changeUnit(units)\r\n        //}\r\n        else{\r\n            throwError('')\r\n        }\r\n    },[data.location,data.length,data.end,data.start,error,props.beamCheck])\r\n\r\n    //const prev = prevUnit.current\r\n\r\n    \r\n\r\n\r\n    const handleChange =(event)=> {\r\n            //setShow({...buttons,\r\n            //formType: {...buttons[formType],instances: [{[event.target.name]:parseInt(event.target.value)}]},\r\n            //})\r\n        let targetValue = event.target.value\r\n        let targetName = event.target.name\r\n        setData({...data,[targetName] : parseInt(targetValue)})   \r\n    }\r\n\r\n    const unitChange=()=>{\r\n        if (units === 'S.I'){\r\n        setUnits('U.S') \r\n        \r\n    }\r\n        if (units == 'U.S') {\r\n            setUnits('S.I') \r\n        }\r\n        \r\n    }\r\n\r\n\r\n    const handleSubmit = (formType)=> { //Currying function\r\n        return async event => {\r\n            event.preventDefault()\r\n            await setShow(\r\n                //{...buttons,[formType]: {instances:[...buttons[formType].instances,{...data}],show:!buttons[formType].show}}\r\n                //) //old close form \r\n                {...buttons,[formType]: {show:!buttons[formType].show}}\r\n                ) // closes form\r\n                console.log('Currently entered: '+ formType, data)\r\n                props.getData({...data,type:formType,unit:units,id:Date.now(),edit:false,isSupport: formType === 'Add Support',unit:units}) //added field of 'form' for unit conversion\r\n            //await setData(initialState)\r\n            //console.log('Data Cleared:', data)\r\n        }\r\n        \r\n    }\r\n\r\n    const renderButtons = (\r\n        Object.keys(buttons).map((buttonName,index)=>{\r\n                return (\r\n                             <div>\r\n                                <button name = {buttonName} key = {index} onClick = {()=>open(buttonName)}>{buttonName}</button>\r\n                                {data.length === 0 && buttonName === 'Add Beam'&& buttons[buttonName].show === false?  <p style = {{color:'red',}}>Please Add Beam first !</p>: null}\r\n                                {buttons[buttonName].show ? \r\n\r\n                                <Spring\r\n                                    \r\n                                    from = {{opacity:0,marginTop: -100}}\r\n                                    to= {{opacity:1,marginTop: 0}}\r\n                                >\r\n                                    {props => (<div style = {props}>\r\n                                        <Form id = {'addID' + index} error = {error} units = {units} values = {data} change = {handleChange} type = {buttonName} onSubmit = {handleSubmit}/>\r\n                                    </div>)}\r\n                                </Spring>\r\n\r\n                                : null}\r\n                                <br/>\r\n                            </div>\r\n                        \r\n                   \r\n                )\r\n            }\r\n        )\r\n    )\r\n\r\n    return (\r\n        <div className = {classes.buttonGroup}>\r\n            {renderButtons}\r\n            <button onClick = {resetData}>Reset Data</button>\r\n            <p style = {{fontSize: '13px'}}>*Double click to reset</p>\r\n            <br/>\r\n        <div style = {{marginTop:'20px'}}>\r\n        \r\n            <label>Units: </label>\r\n                    <select name = 'select' value = {units} onChange= {unitChange}>\r\n                        <option value=\"U.S\">U.S</option>\r\n                        <option value=\"S.I\">S.I</option>\r\n                    </select>\r\n        </div>\r\n            <button style = {{padding: '12px 40px', fontSize: '20px', background: '#e63946'}} id = {'solve'} onClick = {props.solve}>Solve</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ButtonGroup\r\n\r\n","import React from 'react';\r\nimport {Spring} from 'react-spring/renderprops'\r\n\r\nconst Animate =(props)=>{\r\n    const children = props.children\r\n    return (\r\n    <Spring\r\n        from = {{opacity:0,marginTop: -100}}\r\n        to= {{opacity:1,marginTop: 0}}\r\n    >\r\n        {props=>(<div style = {props}>\r\n            {children}\r\n        </div>)}\r\n    </Spring>\r\n    )\r\n}\r\n\r\nexport default Animate","import React from 'react';\r\nimport classes from './Content.module.css'\r\nimport { Stage, Layer, Text, Arrow, Line, Rect, Circle } from 'react-konva';\r\nimport Wrap from './Wrap'\r\nimport Animate from './Animate.js'\r\n\r\n\r\n\r\n\r\nfunction Canvas(props) {\r\n    const useStyle = {\r\n        background:'#ffffff',\r\n        boxShadow: '3px 3px 4px 4px #adb5bd',\r\n        height: '500px',\r\n        margin: '50px',\r\n        marginLeft: '50px',\r\n        marginRight: '50px',\r\n    }\r\n\r\n    let addBeam = props.pass.setupBeam\r\n    let system = props.pass.unit\r\n    let unit = 'm'\r\n\r\n    if (system === 'U.S') {\r\n        unit = 'ft'\r\n    }\r\n    else {\r\n        unit = 'm'\r\n    }\r\n\r\n    let lengthEnd = props.pass.beam + \" \" + unit\r\n    let lengthBegin = '0' + \" \" + unit\r\n\r\n    let zeroX = 200\r\n    let zeroY = 200\r\n    let pixelLength = 600\r\n    let renderLength = 600/props.pass.beam\r\n\r\n    let allUnits = {\r\n        'U.S': {\r\n            'Add Force': ' Lb',\r\n            'Add Moment': ' Lb-ft',\r\n            'Add Distributed Load':' Lb/ft',\r\n        },\r\n        'S.I' : {\r\n            'Add Force':' N',\r\n            'Add Moment':' N-m',\r\n            'Add Distributed Load':' N/m',\r\n\r\n        }\r\n    }\r\n\r\n    let initialScreen = null\r\n    if (!addBeam) {\r\n        initialScreen = (<Text text={'Use buttons on the left to start customize structure'} fontSize={35} x={100} y={200}/>)\r\n    }\r\n\r\n\r\n    let newSupport = props.pass.unknowns.map((support,index)=>{\r\n        let supportName = 'Support ' + index\r\n        let deltaX = support.location*renderLength\r\n        let answer = support.magnitude\r\n        let marker = support.location + ' '+ unit\r\n        let reactionName = 'R'+index+ \": \" + Math.abs(answer) +  allUnits[system]['Add Force']\r\n        return (\r\n            <Wrap>\r\n                <Text text={supportName} fontSize={15} x={zeroX+deltaX-30} y={zeroY+23} />\r\n                <Circle x={zeroX+deltaX} y={zeroY} radius={20} fill=\"orange\" />\r\n                <Line x={zeroX+deltaX} y={400} points={[0, -15, 0, 0, 0, 0]} stroke=\"black\"/> \r\n                <Text text= {marker} fontSize={15} x={zeroX+deltaX} y={405}/>\r\n                {props.pass.solve && support.direction === 1? \r\n                    <Wrap>\r\n                    <Arrow points={[0,60,0,0]} x={zeroX+deltaX} y={zeroY+50} pointerLength = {20} pointerWidth = {10}  pointerAtBeginning = {false} stroke=\"red\" />\r\n                    <Text text={reactionName} fontSize={15} x={zeroX+deltaX-23} y={zeroY+112}/>\r\n                    </Wrap>\r\n                :null}\r\n                {props.pass.solve && support.direction === -1? \r\n        \r\n                    <Wrap>\r\n                    <Arrow points={[0,-60,0,0]} x={zeroX+deltaX} y={zeroY+100} pointerLength = {20} pointerWidth = {10}  pointerAtBeginning = {false} stroke=\"red\" />\r\n                    <Text text={reactionName} fontSize={15} x={zeroX+deltaX-23} y={zeroY+112}/>\r\n                    </Wrap>\r\n                :null}\r\n                {props.pass.solve && !support.direction? \r\n                    <Wrap>\r\n                    <Arrow points={[0,60,0,0]} x={zeroX+deltaX} y={zeroY+50} pointerLength = {20} pointerWidth = {10}  pointerAtBeginning = {false} stroke=\"red\" />\r\n                    <Text text={reactionName} fontSize={15} x={zeroX+deltaX-23} y={zeroY+112}/>\r\n                    </Wrap>\r\n                :null}\r\n            </Wrap>\r\n        )\r\n    })\r\n\r\n    let newForces = props.pass.knowns.force.map((item, index)=>{\r\n        let itemName = 'F' + index+ \": \" + item.magnitude + allUnits[system][item.type]\r\n        //let itemName = item.id \r\n\r\n        let marker = item.location + ' '+ unit\r\n        let deltaX = item.location*renderLength\r\n        if (item.direction === 1) {\r\n            return (\r\n                <Wrap>\r\n                    <Arrow points={[0,60,0,0]} x={zeroX+deltaX} y={60} pointerLength = {20} pointerWidth = {10}  pointerAtBeginning = {false} stroke=\"red\" />\r\n                    <Text text={itemName} fontSize={15} x={zeroX+deltaX} y={40}/>\r\n                    <Line x={zeroX+deltaX} y={400} points={[0, -15, 0, 0, 0, 0]} stroke=\"black\"/> \r\n                    <Text text= {marker} fontSize={15} x={zeroX+deltaX} y={405}/>\r\n                </Wrap>\r\n            )\r\n        }\r\n    \r\n        else if (item.direction === -1) {\r\n            return (\r\n                <Wrap>\r\n                    <Arrow points={[0,-60,0,0]} x={zeroX+deltaX} y={117} pointerLength = {20} pointerWidth = {10}  pointerAtBeginning = {false} stroke=\"red\" />\r\n                    <Text text={itemName} fontSize={15} x={zeroX+deltaX} y={40}/>\r\n                    <Line x={zeroX+deltaX} y={400} points={[0, -15, 0, 0, 0, 0]} stroke=\"black\"/> \r\n                    <Text text= {marker} fontSize={15} x={zeroX+deltaX} y={405}/>\r\n                </Wrap>\r\n        )\r\n        }\r\n    }\r\n    )\r\n\r\n\r\n    let newMoments = props.pass.knowns.moment.map((item, index)=>{\r\n        let itemName = 'M' + index+ \": \" + item.magnitude + allUnits[system][item.type]\r\n        let marker = item.location + ' '+ unit\r\n        let deltaX = item.location*renderLength\r\n            if (item.direction === 1){\r\n                        return (\r\n                            <Wrap>\r\n                                <Arrow points={[-100/2,10/2,-30/2,-30/2,-100/2,-100/2]} x={zeroX+deltaX} y={180} pointerLength = {20} pointerWidth = {10}  pointerAtBeginning = {false} stroke=\"red\" tension = {0.8}/>\r\n                                <Text text={itemName} fontSize={15} x={zeroX+deltaX-70} y={200}/>\r\n                                <Text text= {marker} fontSize={15} x={zeroX+deltaX} y={405}/>\r\n                                <Line x={zeroX+deltaX} y={400} points={[0, -15, 0, 0, 0, 0]} stroke=\"black\"/> \r\n                            </Wrap>\r\n                        )\r\n                    }\r\n            else if ( item.direction === -1) {\r\n                        return (\r\n                            <Wrap>\r\n                                <Arrow points={[0,40,-20,20,5,0,25,30]} x={zeroX+deltaX+6} y={150} pointerLength = {20} pointerWidth = {10}  pointerAtBeginning = {false} stroke=\"red\" tension = {0.8}/>\r\n                                <Text text={itemName} fontSize={15} x={zeroX+deltaX-20} y={200}/>\r\n                                <Text text= {marker} fontSize={15} x={zeroX+deltaX} y={405}/>\r\n                                <Line x={zeroX+deltaX} y={400} points={[0, -15, 0, 0, 0, 0]} stroke=\"black\"/> \r\n                            </Wrap>\r\n                        )\r\n                    }\r\n    })\r\n\r\n    let newDistributed = props.pass.knowns.distributed.map((item, index)=>{\r\n        let magStart = 'w' + index + ': ' + item.magnitude + allUnits[system][item.type] //starting magnitude\r\n        let magEnd = null //implement end magnitude later\r\n        let startLabel = item.start + ' '+ unit\r\n        let endLabel = item.end + ' ' + unit\r\n\r\n        let renderStart = item.start*renderLength // start arrow\r\n        let renderEnd = item.end*renderLength //end arrow\r\n        let sqStart = zeroX+ renderStart //rect X and line X\r\n        let width = renderEnd - renderStart //rect width\r\n            return (\r\n                <Wrap>\r\n                    <Rect x={zeroX + renderStart} y={110} width={width} height={40} fill=\"#00D2FF\" opacity = '0.5'/> \r\n                    <Line x={zeroX + renderStart} y={110} points={[width, 0, 0, 0, 0, 0]} stroke=\"blue\"/> \r\n                    <Arrow points={[0,-40,0,-30,0,0]} x={zeroX + renderStart} y={150} pointerLength = {20} \r\n                        pointerWidth = {10}  pointerAtBeginning = {false} stroke=\"blue\" tension = {0.8}/>\r\n                    <Arrow points={[0,-40,0,-30,0,0]} x={zeroX+renderEnd} y={150} pointerLength = {20} \r\n                        pointerWidth = {10}  pointerAtBeginning = {false} stroke=\"blue\" tension = {0.8}/>\r\n                    <Text text= {magStart} fontSize={15} x={zeroX+renderStart} y={90}/>\r\n                    <Text text= {startLabel} fontSize={15} x={zeroX+renderStart} y={405}/>\r\n                    <Text text= {endLabel} fontSize={15} x={zeroX+renderEnd} y={405}/>\r\n                    <Line x={zeroX+renderStart} y={400} points={[0, -15, 0, 0, 0, 0]} stroke=\"black\"/> \r\n                    <Line x={zeroX+renderEnd} y={400} points={[0, -15, 0, 0, 0, 0]} stroke=\"black\"/> \r\n                </Wrap>\r\n            )\r\n    })\r\n\r\n        \r\n\r\n\r\n\r\n    return (\r\n        <div style = {useStyle} className = {classes.Canvas}>\r\n            <Stage width={900} height={500}>\r\n                <Layer>\r\n\r\n                {initialScreen}\r\n\r\n                    {/*Positive Force*/}\r\n                    {/*<Arrow points={[0,60,0,0]} x={500} y={60} pointerLength = {20} pointerWidth = {10}  pointerAtBeginning = {false} stroke=\"red\" />\r\n                    <Text text=\"+Force\" fontSize={15} x={485} y={125}/>*/}\r\n\r\n                    {/*Negative Force*/}\r\n                    {/*<Arrow points={[0,-60,0,0]} x={570} y={117} pointerLength = {20} pointerWidth = {10}  pointerAtBeginning = {false} stroke=\"red\" />\r\n                    <Text text=\"-Force\" fontSize={15} x={550} y={125}/>*/}\r\n                    \r\n                    {/*BEAM SETUP*/}\r\n                    {addBeam? \r\n                    <Wrap>\r\n                        <Rect x={200} y={150} width={600} height={30} fill=\"grey\"/>\r\n                        {/*label beginning*/}\r\n                        <Text text={lengthBegin} fontSize={15} x={200} y={405}/>\r\n                        {/*tick mark beginning*/}\r\n                        <Line x={200} y={400} points={[0, -15, 0, 0, 0, 0]} stroke=\"black\"/> \r\n\r\n                        {/*Ruler*/}\r\n                        <Line x={200} y={400} points={[600, 0, 0, 0, 0, 0]} stroke=\"black\"/> \r\n                        {/*tick mark end*/}\r\n                        <Line x={800} y={400} points={[0, -15, 0, 0, 0, 0]} stroke=\"black\"/> \r\n                        {/*label end*/}\r\n                        <Text text= {lengthEnd} fontSize={15} x={800} y={405}/>\r\n                    </Wrap>\r\n                    :null}\r\n\r\n                    {/*Actual User Inputted Supports*/}\r\n                    {newSupport}\r\n\r\n                    {/*Actual User Inputted Forces/Moments*/}\r\n\r\n                    \r\n                    {/*Reference ONLY!*/}\r\n                    {/*Support A*/}\r\n                    {/*<Text text=\"Support A\" fontSize={15} x={zeroX-30} y={zeroY+23} />\r\n                    <Circle x={zeroX} y={zeroY} radius={20} fill=\"green\" />*/}\r\n\r\n                    {/*Support B*/}\r\n                    {/*<Text text=\"Support B\" fontSize={15} x={665} y={223} />\r\n                    <Line x={685} y={200} points={[40, 15, 15, -20, -15, 15, 15,15]}  fill = 'blue' closed />*/}\r\n                    \r\n                    {/*Moment*/}\r\n                    {/*CW moment*/}\r\n                    {/*<Arrow points={[0,40,-20,20,5,0,25,30]} x={700} y={150} pointerLength = {20} pointerWidth = {10}  pointerAtBeginning = {false} stroke=\"red\" tension = {0.8}/>\r\n                    <Text text=\"Moment Mangitude\" fontSize={15} x={680} y={200}/>*/}\r\n                    \r\n                    {/*CCW moment*/}\r\n                    {/*<Arrow points={[-100/2,10/2,-30/2,-30/2,-100/2,-100/2]} x={500} y={180} pointerLength = {20} pointerWidth = {10}  pointerAtBeginning = {false} stroke=\"red\" tension = {0.8}/>\r\n                    <Text text=\"Moment Mangitude\" fontSize={15} x={430} y={200}/>*/}\r\n\r\n                    {/*distributed load*/}\r\n                    {/*<Rect x={zeroX} y={110} width={600} height={40} fill=\"#00D2FF\"/>\r\n                    <Line x={zeroX} y={110} points={[600, 0, 0, 0, 0, 0]} stroke=\"blue\"/> \r\n                    <Arrow points={[0,-40,0,-30,0,0]} x={zeroX} y={150} pointerLength = {20} pointerWidth = {10}  pointerAtBeginning = {false} stroke=\"blue\" tension = {0.8}/>\r\n                    <Arrow points={[0,-40,0,-30,0,0]} x={zeroX+600} y={150} pointerLength = {20} pointerWidth = {10}  pointerAtBeginning = {false} stroke=\"blue\" tension = {0.8}/>*/}\r\n\r\n                    {newDistributed}\r\n                    {newForces}\r\n                    {newMoments}\r\n                </Layer>\r\n            </Stage>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Canvas\r\n\r\n","import React, {useState,useEffect} from 'react';\r\nimport Form from './Form'\r\n//import classes from './Table.module.css'\r\nimport classes from './Content.module.css'\r\nimport Animate from './Animate.js'\r\n\r\nfunction Table(props){\r\n    \r\n\r\n    const tableStyle = {\r\n        margin:'auto',\r\n        \r\n        padding: '10px'\r\n    }\r\n\r\n    const [error,throwError] = useState('')\r\n    const [changes,setChanges] = useState({magnitude:0,\r\n        location:0,\r\n        start:0,\r\n        end:0,\r\n        direction:1,})\r\n\r\n\r\n    const allMagUnits = {\r\n        'U.S': {\r\n            'Add Force': ' Lb',\r\n            'Add Moment': ' Lb-ft',\r\n            'Add Distributed Load':' Lb/ft',\r\n        },\r\n        'S.I' : {\r\n            'Add Force':' N',\r\n            'Add Moment':' N-m',\r\n            'Add Distributed Load':' N/m',\r\n    \r\n        }\r\n    }\r\n\r\n    const unit = props.pass.unit\r\n\r\n    const allLengths = {\r\n        'U.S': ' ft',\r\n        'S.I': ' m'\r\n    }\r\n\r\n    const suppUnit= {\r\n        'U.S': ' Lb',\r\n        'S.I': ' N'\r\n\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if (changes.location > props.pass.beam || changes.location < 0 || changes.end > props.pass.beam || changes.start < 0 || changes.end < changes.start){\r\n            throwError('You can only enter location in range of 0 to ' + props.pass.beam)\r\n            console.log(error)\r\n        }\r\n        else if (props.pass.beam === 0){\r\n            throwError(\"Beam length can't be 0\")\r\n            console.log(error)\r\n        }\r\n        else{\r\n            throwError('')\r\n        }\r\n        console.log(\"handlechange: after setting\",changes)\r\n    }, [changes.location,changes.end,changes.start,props.pass.beam,error,changes])\r\n\r\n  \r\n\r\n    \r\n    //let items = props.pass.knowns\r\n    //const [combined,setCombined] = useState([])\r\n    \r\n\r\n    //const addToList=(button)=>{\r\n    //    setButtons([...buttonList,button])\r\n    //}\r\n\r\n    const handleSubmit = (type)=> { //check element id to close\r\n        return async event => {\r\n            await event.preventDefault()\r\n            //handleOpen(\r\n                //{...buttons,[formType]: {instances:[...buttons[formType].instances,{...data}],show:!buttons[formType].show}}\r\n                //) //old close form \r\n                //{...buttons,[formType]: {show:!buttons[formType].show}}\r\n                //) // closes form\r\n                console.log('handelSubmit ', changes)\r\n                props.getData({...changes, type:type}) //added field of 'form' for unit conversion\r\n        }\r\n        \r\n    }\r\n\r\n    const handleChange =(element)=>{\r\n        //let targetValue = event.target.value\r\n        //setChanges({...changes,[event.target.name] : parseInt(targetValue)})   \r\n        return event => {\r\n            console.log(\"handlechange: before\",element)\r\n            let targetValue = event.target.value\r\n            let id = element.id\r\n            let isSupport = element.isSupport\r\n            setChanges({...element,...changes,[event.target.name] : parseInt(targetValue),id:id,isSupport:isSupport},()=>console.log(\"handlechange: after setting\",changes))   \r\n\r\n        }\r\n    }\r\n\r\n\r\n    let items = props.pass.knowns\r\n    let combined = [...items.force,...items.moment,...items.distributed,...props.pass.unknowns]\r\n\r\n    //const handleOpen=(item)=>{\r\n    //    setOpen(true)\r\n        \r\n    //}\r\n    \r\n    let renderItems = combined.map((item,index)=>{\r\n        \r\n        return(\r\n            <tr>\r\n           <td>\r\n                {item.type === 'Add Force'? 'Force':null}\r\n                {item.type === 'Add Moment'? 'Moment':null}\r\n                {item.type === 'Add Distributed Load'? 'Distributed Load':null}\r\n                {item.type === 'Add Support'? 'Support': null}\r\n            </td>\r\n            <td>{item.type=== 'Add Distributed Load'? 'Start :' + item.start + allLengths[unit] + ' End :'+ item.end + allLengths[unit] : item.location+ allLengths[unit]}</td>\r\n            <td>{item.isSupport === false? item.magnitude + allMagUnits[unit][item.type]:\r\n                    Math.abs(item.magnitude) + suppUnit[unit]} </td>\r\n            <td>{item.direction === 1? 'Positive':'Negative'}</td>\r\n            <td><button  id =  {index} onClick = {()=>props.open(item)}>Edit</button>\r\n            {item.edit? \r\n                <Animate><Form   id = {'editID'+index} change = {handleChange(item)} values = {changes} error = {error} type = {item.type} units = {unit} onSubmit = {handleSubmit}/></Animate>\r\n            :null}\r\n            {item.type !== 'Add Support'?\r\n                <button onClick = {()=>props.delete(item)} style ={{marginBottom: '15px',\r\n            marginLeft:'10px'}}>Delete</button>\r\n            :null}\r\n            </td>\r\n           \r\n            </tr>\r\n        )\r\n    })\r\n    return(\r\n        <div className ={classes.Table}>\r\n            <h2>Added Components</h2>\r\n            <table style = {tableStyle}>\r\n                <tbody>\r\n                <tr>\r\n                    <th>Type</th>\r\n                    <th>Location</th>\r\n                    <th>Magnitude</th>\r\n                    <th>Direction</th>\r\n                    <th>Edit/Delete Component</th>\r\n                </tr>\r\n                {renderItems}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Table","import React, {Component} from 'react';\r\nimport ButtonGroup from './ButtonGroup'\r\nimport Canvas from './Canvas'\r\nimport Table from './Table'\r\nimport classes from './Content.module.css'\r\nimport * as math from  'mathjs'\r\n\r\nconst initialState = {\r\n    knowns: {force:[],moment:[],distributed:[]},\r\n    unknowns: [],\r\n    beam: 0,\r\n    unit: 'U.S',\r\n    solve: false,\r\n    setupBeam:false,\r\n    error: null\r\n}\r\n\r\nclass Content extends Component {\r\n    state = {\r\n        knowns: {force:[],moment:[],distributed:[]},\r\n        unknowns: [],\r\n        beam: 0,\r\n        unit: 'U.S', \r\n        solve: false,\r\n        setupBeam:false,\r\n        error: null\r\n    }\r\n\r\n    componentDidMount(){\r\n        document.body.style.backgroundColor = '#ced4da'\r\n    }\r\n\r\n    deleteElement(element){ //delete only forces\r\n        if (element.isSupport === false) {\r\n            let splitArray = element.type.split(' ')\r\n            let type = splitArray[1].toLowerCase()\r\n            let newArray = [...this.state.knowns[type]].filter(item => item.id !== element.id)\r\n            this.setState({knowns:{...this.state.knowns,[type]:newArray}})\r\n        }\r\n        else if (element.isSupport === true){//implement for supports\r\n            let newArray2 = [...this.state.unknowns].filter(item => item.id !== element.id)\r\n            //console.log(element.edit)\r\n            this.setState({unknowns:[...newArray2]})\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    changeUnit(unit){\r\n        this.setState(()=> \r\n            ({unit:unit})\r\n        )\r\n        console.log(this.state.unit)\r\n    }\r\n\r\n    setOpen(element){\r\n        let splitArray = element.type.split(' ')\r\n        let type = splitArray[1].toLowerCase()\r\n        let newElement = {...element,edit:!element.edit}\r\n        \r\n        if(!element.isSupport) {                                                  //edit button logic for non supoort buttons\r\n            let found= this.state.knowns[type].find(item=>item.id === element.id) //exclude the target item in state array\r\n            let indexOfFound = this.state.knowns[type].indexOf(found)             //find item insert order\r\n            let newElement = {...element,edit:!element.edit}                      //reinsert the desired changed element into same index as the state array \r\n            let newArray = [...this.state.knowns[type]].filter(item => item.id !== element.id)\r\n                newArray.splice(indexOfFound,0,newElement) \r\n            this.setState({knowns:{...this.state.knowns, [type]:[...newArray]}})   //set state \r\n        }\r\n        else if (element.isSupport) {                                              //edit button logic for support buttons\r\n            let found2= this.state.unknowns.find(item=>item.id === element.id)\r\n            let indexOfFound2 = this.state.unknowns.indexOf(found2)\r\n            let newArray2 = [...this.state.unknowns].filter(item => item.id !== element.id)\r\n                newArray2.splice(indexOfFound2,0,newElement)\r\n            this.setState({unknowns:[...newArray2]})\r\n        }\r\n    }\r\n\r\n    //submitElement(type) { //handle submit for edit form\r\n    //    return event =>{\r\n    //    event.preventDefault()\r\n    //    event.stopPropagation()\r\n    //    return console.log('changed for ' + type)\r\n    //    }\r\n        //let splitArray = element.type.split(' ')\r\n        //let type = splitArray[1].toLowerCase()\r\n        //let target = this.state.knowns[type].find(item=>item.id === element.id)\r\n        //console.log('element of ' + type + ' submitted a change:', target)\r\n    \r\n\r\n    //handleEdit(element,event) {\r\n    //    let splitArray = element.type.split(' ')\r\n    //    let type = splitArray[1].toLowerCase()\r\n    //    let found= this.state.knowns[type].find(item=>item.id === element.id)\r\n    //    console.log(found)\r\n    //    this.setState({knowns:{...this.state.knowns, [type]:[...this.state.knowns[type],{...found,[event.target.name]:event.target.value}]}})\r\n    //}\r\n\r\n    getChanges(element) { //for editing\r\n        let splitArray = element.type.split(' ')\r\n        let type = splitArray[1].toLowerCase()\r\n        if (element.isSupport === false){\r\n            let found= this.state.knowns[type].find(item=>item.id === element.id)\r\n            //console.log('Found: ',found)\r\n            this.deleteElement(found)\r\n            this.setState({knowns:{...this.state.knowns, [type]:[...this.state.knowns[type],element]}})\r\n            console.log(this.state)\r\n        }else if (element.isSupport === true){\r\n            let newArray2 = [...this.state.unknowns].filter(item => item.id !== element.id)\r\n            let found= this.state.unknowns.find(item=>item.id === element.id)\r\n            //console.log(element.edit)\r\n            this.deleteElement(found)\r\n            this.setState({unknowns:[...newArray2,{...element}]})\r\n        }\r\n       //implement for supports\r\n\r\n    }\r\n\r\n    getData(newData){ //for getting new data from buttongroup\r\n        console.log('Content Page Received Data from child!')\r\n        const {length,...newKnown} = newData\r\n        const {direction,...newSupport} = newKnown\r\n        this.setState({unit:newData.unit})\r\n        this.setState(()=>{\r\n            if (newData.type === 'Add Force'){\r\n                return {knowns:{...this.state.knowns,force:[...this.state.knowns.force,newKnown]}}\r\n            }\r\n            else if (newData.type === 'Add Moment'){\r\n                return {knowns:{...this.state.knowns,moment:[...this.state.knowns.moment,newKnown]}}\r\n            }\r\n            else if (newData.type === 'Add Distributed Load'){\r\n                return {knowns:{...this.state.knowns,distributed:[...this.state.knowns.distributed,newKnown]}}\r\n\r\n            }\r\n            else if (newData.type === 'Add Support'){\r\n                return {unknowns:[...this.state.unknowns,newSupport]}\r\n            }\r\n            else if (newData.type === 'Add Beam'){\r\n                let length = newData.length\r\n                if (length > 0){\r\n                    this.setState({setupBeam:true})\r\n                }\r\n                return {beam:parseInt(length)}\r\n            }\r\n           \r\n        }\r\n        )\r\n        console.log(\"Content State\", this.state)\r\n    }\r\n\r\n    sumFi(Fi) { //sum of first row in b vector\r\n        let array1 = Fi.force.map((force)=>{\r\n            return force.magnitude*force.direction*-1\r\n        })\r\n\r\n        let array2 = Fi.distributed.map((distr)=>{\r\n            return distr.magnitude*(distr.end-distr.start)\r\n        })\r\n\r\n\r\n        let reducer = (acc,curr) => acc+curr\r\n\r\n        let forceOnly = array1.length !==0\r\n        let distrOnly = array2.length !== 0\r\n\r\n        if (forceOnly && distrOnly) {\r\n            return array1.reduce(reducer) +  array2.reduce(reducer)\r\n        }\r\n        else if(forceOnly) {\r\n            return array1.reduce(reducer)\r\n        }\r\n        else if (distrOnly){\r\n            return array2.reduce(reducer)\r\n        }\r\n        else {\r\n            return 0\r\n        }\r\n    }\r\n\r\n    sumFiXi(Fi,Ri){ //sum of products of interaction x distance for second row in b vector\r\n        let inverse = 1\r\n        let array1 = Fi.force.map((force)=>{\r\n            let deltaX = Math.abs(Ri[0].location - force.location)\r\n            if (force.location < Ri[0].location && force.direction === 1) {\r\n                inverse = 1\r\n            }\r\n            else if(force.location < Ri[0].location && force.direction === -1) {\r\n                inverse = -1\r\n            }\r\n            else if (force.location > Ri[0].location && force.direction === -1){\r\n                inverse = 1\r\n            }\r\n            else if (force.location === Ri[0].location){\r\n                inverse = 0\r\n            }\r\n            else if (force.location > Ri[0].location && force.direction === 1){\r\n                inverse = -1\r\n            }\r\n            return force.magnitude*deltaX*inverse\r\n        })\r\n\r\n        let array2 = Fi.moment.map((moment)=>{\r\n            return moment.magnitude*moment.direction*-1\r\n        })\r\n\r\n        let array3 = Fi.distributed.map((distr)=>{\r\n            let distance = Math.abs(Ri[0].location - ((distr.end-distr.start)/2+distr.start))\r\n            let inverse = 1\r\n            if (distr.start >= Ri[0].location) {\r\n                inverse = 1\r\n            }\r\n            else if(distr.start < Ri[0].location) {\r\n                inverse = -1\r\n            }\r\n            return distr.magnitude*(distr.end - distr.start)*distance*inverse\r\n            \r\n        })\r\n\r\n        let reducer = (acc,curr) => acc+curr\r\n        let forceOnly = array1.length !== 0\r\n        let momentOnly = array2.length !== 0\r\n        let distrOnly = array3.length !== 0\r\n\r\n\r\n        if (forceOnly && momentOnly && distrOnly) {\r\n            return array1.reduce(reducer) +  array2.reduce(reducer) + array3.reduce(reducer)\r\n        }\r\n        else if (forceOnly && momentOnly){\r\n            return array1.reduce(reducer) + array2.reduce(reducer)\r\n        }\r\n        else if (forceOnly && distrOnly){\r\n            return array1.reduce(reducer) + array3.reduce(reducer)\r\n        }\r\n        else if (momentOnly && distrOnly) {\r\n            return array2.reduce(reducer) + array3.reduce(reducer)\r\n        }else if(forceOnly) {\r\n            return array1.reduce(reducer)\r\n        }\r\n        else if (momentOnly) {\r\n            return array2.reduce(reducer)\r\n        }\r\n        else if(distrOnly) {\r\n            return array3.reduce(reducer)\r\n        }\r\n    }\r\n\r\n    solve(){ //solving the problem by vector matrices\r\n        //Trival Case: 2 supports and x knowns\r\n        //let answers = []\r\n        let R1 = this.state.unknowns[0]\r\n        let R2 = this.state.unknowns[1]\r\n\r\n        let A = [[1,1],\r\n                 [0,R2.location-R1.location]]\r\n\r\n        let b = [[this.sumFi(this.state.knowns)],\r\n                 [this.sumFiXi(this.state.knowns,this.state.unknowns)]]\r\n\r\n        let A_I = math.inv(A)\r\n\r\n        let x = math.multiply(A_I,b)\r\n\r\n        console.log(b)\r\n        //answers.push({name:'R1', location: R1.location, magnitude: x[0][0], direction:x[0][0]/Math.abs(x[0][0])})\r\n        //answers.push({name:'R2', location: R2.location, magnitude: x[1][0], direction:x[1][0]/Math.abs(x[1][0])})\r\n        //console.log(x)\r\n\r\n        this.setState({solve:true,unknowns:[{...this.state.unknowns[0],magnitude:x[0][0].toFixed(1),direction:x[0][0]/Math.abs(x[0][0])},\r\n                    {...this.state.unknowns[1],magnitude:x[1][0].toFixed(1),direction:x[1][0]/Math.abs(x[1][0])}]}, \r\n                   ()=>console.log('Solved!', this.state.unknowns))\r\n    }\r\n\r\n    getSolveSignal(){ //get solve signal from buttongroup\r\n        console.log('Content received signal to solve')\r\n        if (this.state.knowns.force.length === 0 && this.state.knowns.moment.length === 0 && this.state.knowns.distributed.length ===0\r\n            )\r\n        {\r\n            this.setState({error:'Cannot solve due to missing loads!'})\r\n            console.log('Cannot solve due to missing loads!')\r\n\r\n        }\r\n        else if (this.state.unknowns.length < 2){\r\n            this.setState({error:'Cannot solve due to missing supports!'})\r\n            console.log('Cannot solve due to missing supports!')\r\n        }\r\n        else {\r\n            this.setState({error:'Solved!'})\r\n            this.solve()\r\n        }\r\n    }\r\n\r\n    \r\n    async resetData(){ //reset all state arrays to zero\r\n       await this.setState(()=>initialState)\r\n       console.log(this.state)\r\n    }\r\n\r\n\r\n\r\n    render() { //render components\r\n\r\n\r\n        let noBeam = 'No beam added'\r\n\r\n        return (\r\n            <div className = {classes.flexContainer}>\r\n                <ButtonGroup beamCheck = {this.state.beam} changeUnit = {this.changeUnit.bind(this)} solve = {this.getSolveSignal.bind(this)} reset = {this.resetData.bind(this)} getData = {this.getData.bind(this)}/>\r\n                <Canvas pass = {this.state} output = {this.state}/>\r\n                <div className = {classes.info} >\r\n                    <p><strong>About the Beam Solver v1.0</strong></p>\r\n                    <p>The current version of Beam Solver is only capable of solving statically determinate structures, meaning a single beam with only two supports.\r\n                        However there's no limit on the number of external loads acting on the structure. To solve structures with more than two unknowns, we will need\r\n                        more equations, and this feature, along with shear force and moment diagrams will be coming soon!\r\n                    </p>\r\n                    </div>\r\n                <div className = {classes.message}><h4>Message:</h4>\r\n                {this.state.beam === 0? <span>{noBeam}</span>: \r\n                <span style = {this.state.error === 'Solved!'? {color: 'green'}: {color: 'red'}}> {this.state.error}</span> \r\n                }\r\n                </div>\r\n                <Table open = {this.setOpen.bind(this)} getData = {this.getChanges.bind(this)} delete = {this.deleteElement.bind(this)} pass = {this.state}></Table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Content\r\n\r\n","import React from 'react';\nimport './App.css';\nimport Content from './components/Content'\n\n\nfunction App(){\n  const title ={\n    background: '#2a9d8f',\n    color : 'white',\n    height: '100px',\n    textAlign: 'center',\n    paddingTop: '10px',\n    fontSize: '25px',\n    boxShadow: '3px 3px 3px #adb5bd',\n}\n\nconst footer = {\n    marginTop: '300px',\n    background: '#2a9d8f',\n    color : 'white',\n    height: '100px',\n    textAlign: 'center',\n    fontSize: '15px',\n    boxShadow: '3px 3px 4px 4px #adb5bd',\n    paddingTop: '10px',\n    zIndex: '1',\n}\n \n    return (\n      <div className=\"App\">\n        <div style = {title}>\n          <h1>Beam Solver v1.0</h1>\n        </div>\n        <Content/>\n        <div style = {footer}>\n          <footer><h3>Made by Jack Zhen, Civil Engineer, SJSU 2020</h3></footer> \n          <footer><h3>Check me out at:</h3></footer>\n          <footer><h3><a href = 'https://www.linkedin.com/in/jackzhen/'>Linkedin</a></h3></footer>\n        </div>\n      </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flexContainer\":\"Content_flexContainer__2Tbgn\",\"info\":\"Content_info__34R2e\",\"buttonGroup\":\"Content_buttonGroup__33Fb6\",\"message\":\"Content_message__1Ajlv\",\"Table\":\"Content_Table__34iv5\",\"Canvas\":\"Content_Canvas__3iZIY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2ea6i\",\"slidedown\":\"Form_slidedown__hU_r1\"};"],"sourceRoot":""}